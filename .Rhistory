runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
View(dunyabazindaaktif)
shiny::runApp()
runApp()
bulasmisbuyumeOranlari <<- dunyabazindabulasmis$Deger
for(i in 57:1){
bulasmisbuyumeOranlari[i] = dunyabazindabulasmis$Deger[i] / dunyabazindabulasmis$Deger[i-1]
}
for(i in 57:1){
print("a")
}
for(i in 57:1){
print(i)
}
for(i in 57:1){
bulasmisbuyumeOranlari[i] = (dunyabazindabulasmis$Deger[i] / dunyabazindabulasmis$Deger[i-1])
}
for(i in 57:1){
print(dunyabazindabulasmis$Deger[i] / dunyabazindabulasmis$Deger[i-1])
}
for(i in 57:1){
bulasmisbuyumeOranlari[i-1] = (dunyabazindabulasmis$Deger[i] / dunyabazindabulasmis$Deger[i-1])
}
runApp()
rm(bulasmisbuyumeOranlari)
runApp()
runApp()
bulasmisbuyumeOranlari = dunyabazindabulasmis$Deger
for(i in 57:1){
bulasmisbuyumeOranlari[i-1] = (dunyabazindabulasmis$Deger[i] / dunyabazindabulasmis$Deger[i-1])
}
view(bulasmisbuyumeOranlari)
View(bulasmisbuyumeOranlari)
for(i in 57:1){
bulasmisbuyumeOranlari[i-1] = (dunyabazindabulasmis$Deger[i] / dunyabazindabulasmis$Deger[i-1])
kurtulmusbuyumeOranlari[i-1] = (dunyabazindakurtulmus$Deger[i] / dunyabazindakurtulmus$Deger[i-1])
olmusbuyumeOranlari[i-1] = (dunyabazindaolmus$Deger[i] / dunyabazindaolmus$Deger[i-1])
aktifbuyumeOranlari[i-1] = (dunyabazindaaktif$Deger[i] / dunyabazindaaktif$Deger[i-1])
}
bulasmisbuyumeOranlari = dunyabazindabulasmis$Deger
kurtulmusbuyumeOranlari = dunyabazindakurtulmus$Deger
olmusbuyumeOranlari =  dunyabazindaolmus$Deger
aktifbuyumeOranlari = dunyabazindaaktif$Deger
for(i in 57:1){
bulasmisbuyumeOranlari[i-1] = (dunyabazindabulasmis$Deger[i] / dunyabazindabulasmis$Deger[i-1])
kurtulmusbuyumeOranlari[i-1] = (dunyabazindakurtulmus$Deger[i] / dunyabazindakurtulmus$Deger[i-1])
olmusbuyumeOranlari[i-1] = (dunyabazindaolmus$Deger[i] / dunyabazindaolmus$Deger[i-1])
aktifbuyumeOranlari[i-1] = (dunyabazindaaktif$Deger[i] / dunyabazindaaktif$Deger[i-1])
}
runApp()
runApp()
runApp()
View(buyume)
runApp()
runApp()
runApp()
bulasmisbuyumeOranlari = dunyabazindabulasmis$Deger
kurtulmusbuyumeOranlari = dunyabazindakurtulmus$Deger
olmusbuyumeOranlari =  dunyabazindaolmus$Deger
aktifbuyumeOranlari = dunyabazindaaktif$Deger
for(i in 57:3){
bulasmisbuyumeOranlari[i-1] = ((dunyabazindabulasmis$Deger[i]-dunyabazindabulasmis$Deger[i-1]) / (dunyabazindabulasmis$Deger[i-1] - dunyabazindabulasmis$Deger[i-2]))
kurtulmusbuyumeOranlari[i-1] =((dunyabazindakurtulmus$Deger[i]-dunyabazindakurtulmus$Deger[i-1]) / (dunyabazindakurtulmus$Deger[i-1] - dunyabazindakurtulmus$Deger[i-2]))
olmusbuyumeOranlari[i-1] = ((dunyabazindaolmus$Deger[i]-dunyabazindaolmus$Deger[i-1]) / (dunyabazindaolmus$Deger[i-1] - dunyabazindaolmus$Deger[i-2]))
aktifbuyumeOranlari[i-1] =((dunyabazindaaktif$Deger[i]-dunyabazindaaktif$Deger[i-1]) / (dunyabazindaaktif$Deger[i-1] - dunyabazindaaktif$Deger[i-2]))
}
runApp()
runApp()
View(bulasmisbuyumeOranlari)
buyume$Bulasmis[0]
buyume$Bulasmis[1]
bulasmisbuyumeOranlari[☺0]
bulasmisbuyumeOranlari[0]
bulasmisbuyumeOranlari[1]
bulasmisbuyumeOranlari[57]
buyume$Bulasmis[57]
runApp()
runApp()
runApp()
runApp()
runApp()
bulasmisbuyumeOranlari[0]=4
runApp()
runApp()
((dunyabazindabulasmis$Deger[57]-dunyabazindabulasmis$Deger[56]) / (dunyabazindabulasmis$Deger[56] - dunyabazindabulasmis$Deger[55]))
((dunyabazindabulasmis$Deger[3]-dunyabazindabulasmis$Deger[2]) / (dunyabazindabulasmis$Deger[2] - dunyabazindabulasmis$Deger[1]))
((dunyabazindabulasmis$Deger[2]-dunyabazindabulasmis$Deger[1])
(dunyabazindabulasmis$Deger[2]-dunyabazindabulasmis$Deger[1])
)
(dunyabazindabulasmis$Deger[2]-dunyabazindabulasmis$Deger[1])
(dunyabazindabulasmis$Deger[2]-dunyabazindabulasmis$Deger[1])/dunyabazindabulasmis$Deger[1]
i=2
((dunyabazindabulasmis$Deger[i]-dunyabazindabulasmis$Deger[i-1]) / dunyabazindaolmus$Deger[i-1])
(dunyabazindabulasmis$Deger[i]-dunyabazindabulasmis$Deger[i-1]) / dunyabazindaolmus$Deger[i-1]
dunyabazindabulasmis$Deger[i]-dunyabazindabulasmis$Deger[i-1]
dunyabazindaolmus$Deger[i-1]
runApp()
shiny::runApp()
runApp()
runApp()
View(recovered)
View(confirmed)
View(deaths)
runApp()
View(recovered)
runApp()
View(recovered)
runApp()
View(recovered)
View(deaths)
View(ulkeler)
shiny::runApp()
ulkeler
ulkeler2 <<- sqldf("SELECT Ulke FROM recovered GROUP BY Ulke")
ulkeler3 <<- sqldf("SELECT Ulke FROM deaths GROUP BY Ulke")
View(ulkeler)
View(ulkeler2)
View(ulkeler3)
View(recovered)
View(ulkeler)
View(ulkeler2)
runApp()
ulkeler3 <<- sqldf("SELECT Ulke FROM deaths GROUP BY Ulke")
ulkeler2 <<- sqldf("SELECT Ulke FROM recovered GROUP BY Ulke")
View(recovered)
runApp()
ulkeler2 <<- sqldf("SELECT Ulke FROM recovered GROUP BY Ulke")
ulkeler3 <<- sqldf("SELECT Ulke FROM deaths GROUP BY Ulke")
ulkeler <<- sqldf("SELECT Ulke FROM confirmed GROUP BY Ulke")
View(ulkeler)
View(ulkeler2)
View(ulkeler3)
View(kurtulmus)
runApp()
ulkeler <<- sqldf("SELECT Ulke FROM confirmed GROUP BY Ulke")
ulkeler <<- sqldf("SELECT Ulke FROM recovered GROUP BY Ulke")
ulkeler <<- sqldf("SELECT Ulke FROM confirmed GROUP BY Ulke")
ulkeler2 <<- sqldf("SELECT Ulke FROM recovered GROUP BY Ulke")
ulkeler2 <<- sqldf("SELECT Ulke FROM deaths GROUP BY Ulke")
ulkeler2 <<- sqldf("SELECT Ulke FROM recovered GROUP BY Ulke")
ulkeler3 <<- sqldf("SELECT Ulke FROM deaths GROUP BY Ulke")
View(ulkeler)
View(ulkeler2)
View(ulkeler3)
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
for(i in (length(dunyabazindabulasmis$Deger)):1){
}
(length(dunyabazindabulasmis$Deger))
for(i in length(dunyabazindabulasmis$Deger):1){}
for(i in length(dunyabazindabulasmis$Deger):1)
{
print(i)
}
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
5/0
runApp()
shiny::runApp()
bulasmisbuyumeOranlari[i] <- 5/0
i
shiny::runApp()
View(buyume)
rm(buyume)
buyume
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
rm(bulasmisbuyumeOranlari)
rm(kurtulmusbuyumeOranlari)
rm(olmusbuyumeOranlari)
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(ucuncu_data)
runApp()
runApp()
View(bulasmis)
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
rm(agirhastalik)
rm(aktif)
rm(aktifsondurum)
rm(bulasmis)
rm(bulasmissondurum)
rm(buyume)
rm(cinsiyet)
rm(confirmed)
rm(deaths)
rm(dunyabazindaaktif)
rm(dunyabazindabulasmis)
rm(dunyabazindakurtulmus)
rm(dunyabazindaolmus)
rm(hastalikturleri)
rm(kurtulmus)
rm(kurtulmusbuyumeOranlari)
rm(kurtulmussondurum)
rm(oolmus)
rm(olmus)
rm(olmussondurum)
rm(recovered)
rm(sikayetler)
rm(sondurumlar)
rm(ucuncu_data)
rm(ulkeler)
rm(ulkeler2)
rm(ulkeler3)
rm(veriler)
rm(yas)
rm(aktifbuyumeOranlari)
rm(aktifsqlsorgu)
rm(birinci_data)
rm(bulasmisbuyumeOranlari)
rm(bulasmissqlsorgu)
rm(i)
rm(ikinci_data)
rm(kurtulmussqlsorgu)
rm(olmusbuyumeOranlari)
rm(olmussqlsorgu)
runApp()
runApp()
runApp()
View(bulasmis)
View(kurtulmus)
View(olmus)
runApp()
View(kurtulmus)
runApp()
shiny::runApp()
View(kurtulmus)
View(bulasmis)
a = sqldf("SELECT Ulke FROM kurtulmus GROUP BY Ulke")
b = sqldf("SELECT Ulke FROM bulasmis GROUP BY Ulke")
View(a)
View(b)
runApp()
View(aktif)
View(bulasmis)
View(kurtulmus)
View(olmus)
runApp()
View(aktif)
View(bulasmis)
runApp()
View(kurtulmus)
runApp()
runApp()
View(bulasmis)
bulasmisUlke <- sqldf(paste("SELECT Tarih, Deger FROM bulasmis WHERE Ulke ='",'Çin',"'",sep=""))
View(bulasmisUlke)
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
View(turkiye)
ulke="Türkiye"
bulasmisUlke <- sqldf(paste("SELECT Tarih, Deger FROM bulasmis WHERE Ulke ='", ulke,"' AND Deger>0",sep=""))
View(bulasmisUlke)
View(bulasmis)
bulasmisUlke <- sqldf(paste("SELECT Tarih, Deger FROM bulasmis WHERE Ulke ='", ulke,"' AND Tarih>"2020-03-11 AND Tarih <"2020-04-02",sep=""))
bulasmisUlke <- sqldf(paste("SELECT Tarih, Deger FROM bulasmis WHERE Ulke ='", ulke,"' AND Tarih>'2020-03-11' AND Tarih <'2020-04-02',sep=""))
bulasmisUlke <- sqldf(paste("SELECT Tarih, Deger FROM bulasmis WHERE Ulke ='", ulke,"' AND Tarih>'2020-03-11' AND Tarih <'2020-04-02'",sep=""))
bulasmisUlke <- sqldf(paste("SELECT Tarih, Deger FROM bulasmis WHERE Ulke ='", ulke,"' AND Tarih>'2020-03-11' AND Tarih <'2020-04-02'",sep=""))
View(bulasmisUlke)
bulasmisUlke <- sqldf(paste("SELECT Tarih, Deger FROM bulasmis WHERE Ulke ='", ulke,"' AND Tarih=>'2020-03-11' AND Tarih <='2020-04-02'",sep=""))
bulasmisUlke <- sqldf(paste("SELECT Tarih, Deger FROM bulasmis WHERE Ulke ='", ulke,"' AND Tarih>='2020-03-11' AND Tarih <='2020-04-02'",sep=""))
View(olmus)
View(aktif)
View(turkiye)
runApp()
View(aktifturkiye)
runApp()
View(turkiyebirlesik)
runApp()
runApp()
install.packages(c("sp", "tidyverse"))
TUR <- readRDS("TUR_adm1.rds")
TUR_for <- fortify(TUR)
library(tidyverse)
library(sp)
TUR <- readRDS("TUR_adm1.rds")
TUR_for <- fortify(TUR)
View(TUR)
View(TUR_for)
ggplot(TUR_for) +
geom_polygon(aes(x = long, y = lat,
group = group),
color = "white",
fill = "#97ECEA") +
theme_void() +
coord_fixed()
shiny::runApp()
haritaverileri <- read_csv("database/vakalar.csv")
View(haritaverileri)
runApp()
runApp()
View(idliveriler)
runApp()
View(idliveriler)
View(idliveriler)
runApp()
runApp()
runApp()
install.packages("mapproj")
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
View(idliveriler)
runApp('C:/Users/serba/Desktop/CoronaEng')
runApp()
View(idliveriler)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
min(final_ist_map$vaka_sayisi)
max(final_ist_map$vaka_sayisi)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(final_ist_map)
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(turkiyebirlesik)
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("jpeg")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(turkiyebirlesik)
View(final_ist_map)
View(idliveriler)
View(idliveriler)
final_ist_map <<- sqldf(c("update final_ist_map set il = 'AydÄ±n' where il = 'Aydin'", "select * from final_ist_map"))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp('C:/Users/serba/Desktop/CoronaEng')
max(as.Date(olmus$Tarih))
max(olmus$Tarih)
runApp()
shiny::runApp()
